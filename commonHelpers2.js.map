{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const feedbackForm = document.querySelector('.feedback-form');\nconst userEmail = feedbackForm.querySelector('input[type=\"email\"]');\nconst userMessage = feedbackForm.querySelector('textarea');\n\nconst LS_FEEDBACK = 'feedback-form-state';\n\n// Функція для отримання даних з локального сховища\nfunction getFromStorage() {\n    const storedData = localStorage.getItem(LS_FEEDBACK);\n    return storedData ? JSON.parse(storedData) : {};\n}\n\n// Прослуховування події \"input\" для відстеження введення\nfeedbackForm.addEventListener('input', (event) => {\n    // Спочатку отримуємо поточні дані з локального сховища\n    const userFeedback = getFromStorage();\n\n    // Оновлюємо об'єкт userFeedback залежно від події \"input\"\n    if (event.target.name === 'email') {\n        userFeedback.email = event.target.value.trim();\n    }\n\n    if (event.target.name === 'message') {\n        userFeedback.message = event.target.value.trim();\n    }\n\n    // Зберігаємо оновлені дані у локальному сховищі\n    localStorage.setItem(LS_FEEDBACK, JSON.stringify(userFeedback));\n});\n\n// Прослуховування події \"submit\" для обробки відправки форми\nfeedbackForm.addEventListener('submit', (event) => {\n    // Забираємо дані з локального сховища\n    const parsedFeedback = getFromStorage();\n\n    // Використовуємо дані форми або дані з локального сховища для виводу\n    const obj = {\n        email: userEmail.value.trim(),\n        message: userMessage.value.trim(),\n    };\n\n    if (obj.email && obj.message) {\n        event.preventDefault();\n        // Очищуємо локальне сховище\n        localStorage.removeItem(LS_FEEDBACK);\n        // Очищуємо поля форми\n        userEmail.value = '';\n        userMessage.value = '';\n\n        console.log('object:', obj);\n    } else {\n        alert('Заповніть усі поля');\n    }\n});\n\n// Прослуховування події \"load\" для встановлення даних з локального сховища при завантаженні сторінки\nwindow.addEventListener('load', (event) => {\n    // Отримуємо дані з локального сховища при завантаженні сторінки\n    const parsedFeedback = getFromStorage();\n\n    // Встановлюємо значення полів форми на основі отриманих даних\n    if (parsedFeedback.hasOwnProperty('email')) {\n        userEmail.value = parsedFeedback.email;\n    }\n\n    if (parsedFeedback.hasOwnProperty('message')) {\n        userMessage.value = parsedFeedback.message;\n    }\n\n    console.log('got from storage on load: ', parsedFeedback);\n});\n"],"names":["feedbackForm","userEmail","userMessage","LS_FEEDBACK","getFromStorage","storedData","event","userFeedback","obj","parsedFeedback"],"mappings":"oDAAA,MAAMA,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAYD,EAAa,cAAc,qBAAqB,EAC5DE,EAAcF,EAAa,cAAc,UAAU,EAEnDG,EAAc,sBAGpB,SAASC,GAAiB,CACtB,MAAMC,EAAa,aAAa,QAAQF,CAAW,EACnD,OAAOE,EAAa,KAAK,MAAMA,CAAU,EAAI,CAAA,CACjD,CAGAL,EAAa,iBAAiB,QAAUM,GAAU,CAE9C,MAAMC,EAAeH,IAGjBE,EAAM,OAAO,OAAS,UACtBC,EAAa,MAAQD,EAAM,OAAO,MAAM,KAAI,GAG5CA,EAAM,OAAO,OAAS,YACtBC,EAAa,QAAUD,EAAM,OAAO,MAAM,KAAI,GAIlD,aAAa,QAAQH,EAAa,KAAK,UAAUI,CAAY,CAAC,CAClE,CAAC,EAGDP,EAAa,iBAAiB,SAAWM,GAAU,CAExBF,EAAiB,EAGxC,MAAMI,EAAM,CACR,MAAOP,EAAU,MAAM,KAAM,EAC7B,QAASC,EAAY,MAAM,KAAM,CACzC,EAEQM,EAAI,OAASA,EAAI,SACjBF,EAAM,eAAc,EAEpB,aAAa,WAAWH,CAAW,EAEnCF,EAAU,MAAQ,GAClBC,EAAY,MAAQ,GAEpB,QAAQ,IAAI,UAAWM,CAAG,GAE1B,MAAM,oBAAoB,CAElC,CAAC,EAGD,OAAO,iBAAiB,OAASF,GAAU,CAEvC,MAAMG,EAAiBL,IAGnBK,EAAe,eAAe,OAAO,IACrCR,EAAU,MAAQQ,EAAe,OAGjCA,EAAe,eAAe,SAAS,IACvCP,EAAY,MAAQO,EAAe,SAGvC,QAAQ,IAAI,6BAA8BA,CAAc,CAC5D,CAAC"}